From 8418188566b16b5e0cf7c6c1f1c82ebffad2d5b7 Mon Sep 17 00:00:00 2001
From: David Steele <dsteele@gmail.com>
Date: Wed, 18 Sep 2013 21:37:47 -0400
Subject: [PATCH 12/20] Collect and consolidate the various timers in the app.

Poll period when xmpp is working, and when it is not, plus
the keepalive ping time.
(cherry picked from commit 91eae404aaa14950209dc1acc9541cc4df9a3f2a)
---
 cloudprint/cloudprint.py | 10 ++++++----
 cloudprint/xmpp.py       | 10 ++++------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/cloudprint/cloudprint.py b/cloudprint/cloudprint.py
index 269710d..370fa89 100755
--- a/cloudprint/cloudprint.py
+++ b/cloudprint/cloudprint.py
@@ -27,7 +27,8 @@ PRINT_CLOUD_SERVICE_ID = 'cloudprint'
 CLIENT_LOGIN_URL = '/accounts/ClientLogin'
 PRINT_CLOUD_URL = '/cloudprint/'
 
-# period in seconds with which we should poll for new jobs via the HTTP api.
+# period in seconds with which we should poll for new jobs via the HTTP api,
+# when xmpp is connecting properly.
 # 'None' to poll only on startup and when we get XMPP notifications.
 POLL_PERIOD=30.0
 
@@ -356,7 +357,7 @@ def process_job(cups_connection, cpp, printer, job):
 
 def process_jobs(cups_connection, cpp, printers):
     xmpp_auth = file(cpp.xmpp_auth_path).read()
-    xmpp_conn = xmpp.XmppConnection()
+    xmpp_conn = xmpp.XmppConnection(keepalive_period=KEEPALIVE)
 
     while True:
         try:
@@ -372,8 +373,9 @@ def process_jobs(cups_connection, cpp, printers):
             xmpp_conn.await_notification(sleeptime)
 
         except Exception:
-            LOGGER.exception('ERROR: Could not Connect to Cloud Service. Will Try again in 60 Seconds')
-            time.sleep(60)
+            global FAIL_RETRY
+            LOGGER.exception('ERROR: Could not Connect to Cloud Service. Will Try again in %d Seconds') % FAIL_RETRY
+            time.sleep(FAIL_RETRY)
 
 
 def usage():
diff --git a/cloudprint/xmpp.py b/cloudprint/xmpp.py
index 6ec0aaf..41f4728 100644
--- a/cloudprint/xmpp.py
+++ b/cloudprint/xmpp.py
@@ -7,9 +7,6 @@ import time
 from collections import deque
 from xml.etree.ElementTree import XMLParser, TreeBuilder
 
-# frequency with which to send keepalives
-KEEPALIVE_PERIOD=60.0
-
 LOGGER = logging.getLogger('cloudprint.xmpp')
 
 class XmppXmlHandler(object):
@@ -46,9 +43,10 @@ class XmppXmlHandler(object):
             return None
 
 class XmppConnection(object):
-    def __init__(self):
+    def __init__(self, keepalive_period=60.0):
         self._connected = False
         self._wrappedsock = None
+        self._keepalive_period = keepalive_period
 
     def _read_socket(self):
         """read pending data from the socket, and send it to the XML parser.
@@ -63,7 +61,7 @@ class XmppConnection(object):
             raise
 
         LOGGER.debug('<<< %s' % data)
-        self._nextkeepalive = time.time() + KEEPALIVE_PERIOD
+        self._nextkeepalive = time.time() + self._keepalive_period
         self._xmlparser.feed(data)
 
     def _write_socket(self, msg):
@@ -71,7 +69,7 @@ class XmppConnection(object):
         LOGGER.debug('>>> %s' % msg)
         try:
             self._wrappedsock.sendall(msg)
-            self._nextkeepalive = time.time() + KEEPALIVE_PERIOD
+            self._nextkeepalive = time.time() + self._keepalive_period
         except Exception:
             self._conected = False
             raise
-- 
1.8.4.rc3

