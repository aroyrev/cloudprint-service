From 7b74f1b6b99acfa7ab39631b46ae3861dfcb7ccc Mon Sep 17 00:00:00 2001
From: David Steele <dsteele@gmail.com>
Date: Tue, 19 Nov 2013 22:03:54 -0500
Subject: [PATCH 4/5] Add -u option to store username/password with sasl

The SASL token is timing out, in a period somewhere between days
and months. Optionally save the username and password in authfile,
in a format maintained by cloudprint.py, as a means to reauthenticate
in that case.

Closes #18 - saved password or pass to argument?
Closes #50 - Why 3 different authfile names, instead of 2? Causing errors?
---
 README.rst               |  2 ++
 cloudprint/cloudprint.py | 20 ++++++++++++++++----
 2 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/README.rst b/README.rst
index b8f2d53..91ef4ee 100644
--- a/README.rst
+++ b/README.rst
@@ -18,6 +18,8 @@ Usage
   -a account_file : path to google account ident data (optional)
   -c              : establish and store login credentials, then exit
   -f              : 'fast poll', if notifications aren't working
+  -u              : store username/password in addition to login token
+                    to avoid authentication expiration
   -h              : display this help
 
 Google accounts with 2 step verification enabled need to use an
diff --git a/cloudprint/cloudprint.py b/cloudprint/cloudprint.py
index cc04657..22cfd64 100755
--- a/cloudprint/cloudprint.py
+++ b/cloudprint/cloudprint.py
@@ -55,6 +55,7 @@ class CloudPrintProxy(object):
         self.username = None
         self.password = None
         self.sleeptime = 0
+        self.storepw = False
 
     def get_auth(self):
         if self.auth:
@@ -107,7 +108,9 @@ class CloudPrintProxy(object):
     def get_saved_auth(self):
         if os.path.exists(self.auth_path):
             auth_file = open(self.auth_path)
-            self.auth = auth_file.read()
+            self.auth = auth_file.readline().rstrip()
+            self.username = auth_file.readline().rstrip()
+            self.password = auth_file.readline().rstrip()
             auth_file.close()
             return self.auth
 
@@ -123,6 +126,8 @@ class CloudPrintProxy(object):
                 auth_file.close()
             auth_file = open(self.auth_path, 'w')
             auth_file.write(self.auth)
+            if self.storepw:
+                auth_file.write("\n%s\n%s\n" % (self.username, self.password))
             auth_file.close()
 
     def get_rest(self):
@@ -380,18 +385,19 @@ def process_jobs(cups_connection, cpp, printers):
 
 
 def usage():
-    print sys.argv[0] + ' [-d][-l][-h][-c][-f][-v] [-p pid_file] [-a account_file]'
+    print sys.argv[0] + ' [-d][-l][-h][-c][-f][-u][-v] [-p pid_file] [-a account_file]'
     print '-d\t\t: enable daemon mode (requires the daemon module)'
     print '-l\t\t: logout of the google account'
     print '-p pid_file\t: path to write the pid to (default cloudprint.pid)'
     print '-a account_file\t: path to google account ident data (default ~/.cloudprintauth)'
     print '-c\t\t: establish and store login credentials, then exit'
     print '-f\t\t: use fast poll if notifications are not working'
+    print '-u\t\t: store username/password in addition to login token'
     print '-v\t\t: verbose logging'
     print '-h\t\t: display this help'
 
 def main():
-    opts, args = getopt.getopt(sys.argv[1:], 'dlhp:a:cvf')
+    opts, args = getopt.getopt(sys.argv[1:], 'dlhp:a:cuvf')
     daemon = False
     logout = False
     pidfile = None
@@ -400,6 +406,7 @@ def main():
     verbose = False
     saslauthfile = None
     fastpoll = False
+    storepw = False
     for o, a in opts:
         if o == '-d':
             daemon = True
@@ -416,6 +423,8 @@ def main():
             verbose = True
         elif o == '-f':
             fastpoll = True
+        elif o == '-u':
+            storepw = True
         elif o =='-h':
             usage()
             sys.exit()
@@ -444,6 +453,9 @@ def main():
     if fastpoll:
         cpp.sleeptime = FAST_POLL_PERIOD
 
+    if storepw:
+        cpp.storepw = True
+
     if logout:
         cpp.del_saved_auth()
         LOGGER.info('logged out')
@@ -451,7 +463,7 @@ def main():
 
     # Check if password authentification is needed
     if not cpp.get_saved_auth():
-        if authfile is None  or not os.path.exists(authfile):
+        if authfile is None or not os.path.exists(authfile):
           cpp.username = raw_input('Google username: ')
           cpp.password = getpass.getpass()
 
-- 
1.8.5.2

