From cf3fb66f6779695791cd5834320db42ab0fe0fd1 Mon Sep 17 00:00:00 2001
From: David Steele <dsteele@gmail.com>
Date: Tue, 19 Nov 2013 22:03:54 -0500
Subject: [PATCH 28/29] Add -u option to store username/password with sasl

The SASL token is timing out, in a period somewhere between days
and months. Optionally save the username and password in authfile,
in a format maintained by cloudprint.py, as a means to reauthenticate
in that case.
---
 README.rst               |  2 ++
 cloudprint/cloudprint.py | 18 +++++++++++++++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/README.rst b/README.rst
index 92d06dc..4d480c7 100644
--- a/README.rst
+++ b/README.rst
@@ -17,6 +17,8 @@ Usage
   -p pid_file     : path to write the pid to (default cloudprint.pid)
   -a account_file : path to google account ident data (optional)
   -c              : establish and store login credentials, then exit
+  -u              : store username/password in addition to login token
+                    to avoid authentication expiration
   -h              : display this help
 
 Google accounts with 2 step verification enabled need to use an
diff --git a/cloudprint/cloudprint.py b/cloudprint/cloudprint.py
index dbe22e5..f9a4a3a 100755
--- a/cloudprint/cloudprint.py
+++ b/cloudprint/cloudprint.py
@@ -54,6 +54,7 @@ class CloudPrintProxy(object):
         self.xmpp_auth_path = os.path.expanduser('~/.cloudprintauth.sasl')
         self.username = None
         self.password = None
+        self.storepw = False
 
     def get_auth(self):
         if self.auth:
@@ -106,7 +107,9 @@ class CloudPrintProxy(object):
     def get_saved_auth(self):
         if os.path.exists(self.auth_path):
             auth_file = open(self.auth_path)
-            self.auth = auth_file.read()
+            self.auth = auth_file.readline().rstrip()
+            self.username = auth_file.readline().rstrip()
+            self.password = auth_file.readline().rstrip()
             auth_file.close()
             return self.auth
 
@@ -122,6 +125,8 @@ class CloudPrintProxy(object):
                 auth_file.close()
             auth_file = open(self.auth_path, 'w')
             auth_file.write(self.auth)
+            if self.storepw:
+                auth_file.write("\n%s\n%s\n" % (self.username, self.password))
             auth_file.close()
 
     def get_rest(self):
@@ -386,16 +391,18 @@ def usage():
     print '-p pid_file\t: path to write the pid to (default cloudprint.pid)'
     print '-a account_file\t: path to google account ident data (default ~/.cloudprintauth)'
     print '-c\t\t: establish and store login credentials, then exit'
+    print '-u\t\t: store username/password in addition to login token'
     print '-h\t\t: display this help'
 
 def main():
-    opts, args = getopt.getopt(sys.argv[1:], 'dlhp:a:c')
+    opts, args = getopt.getopt(sys.argv[1:], 'dlhp:a:cu')
     daemon = False
     logout = False
     pidfile = None
     authfile = None
     authonly = False
     saslauthfile = None
+    storepw = False
     for o, a in opts:
         if o == '-d':
             daemon = True
@@ -408,6 +415,8 @@ def main():
             saslauthfile = authfile+'.sasl'
         elif o == '-c':
             authonly = True
+        elif o == '-u':
+            storepw = True
         elif o =='-h':
             usage()
             sys.exit()
@@ -429,6 +438,9 @@ def main():
         cpp.auth_path = authfile
         cpp.xmpp_auth_path = saslauthfile
 
+    if storepw:
+        cpp.storepw = True
+
     if logout:
         cpp.del_saved_auth()
         LOGGER.info('logged out')
@@ -436,7 +448,7 @@ def main():
 
     # Check if password authentification is needed
     if not cpp.get_saved_auth():
-        if authfile is None  or not os.path.exists(authfile):
+        if authfile is None or not os.path.exists(authfile):
           cpp.username = raw_input('Google username: ')
           cpp.password = getpass.getpass()
 
-- 
1.8.4.4

