From: David Steele <daves@jessie>
Date: Fri, 25 Sep 2015 22:43:14 -0400
Subject: Revert "Update for new python-deamon"

Use the old python-daemon on Jessie.

This reverts commit 88acead3d1daf1fd63ca32bb3eddf57ab392fea5.

Conflicts:
	cloudprint/cloudprint.py
---
 cloudprint/cloudprint.py | 32 ++++++++++++++++++++++++--------
 1 file changed, 24 insertions(+), 8 deletions(-)

diff --git a/cloudprint/cloudprint.py b/cloudprint/cloudprint.py
index 295da5f..7bb6969 100755
--- a/cloudprint/cloudprint.py
+++ b/cloudprint/cloudprint.py
@@ -305,6 +305,21 @@ class PrinterProxy(object):
         return self.cpp.delete_printer(self.id)
 
 
+class App(object):
+    def __init__(self, cups_connection=None, cpp=None, printers=None, pidfile_path=None):
+        self.cups_connection = cups_connection
+        self.cpp = cpp
+        self.printers = printers
+        self.pidfile_path = pidfile_path
+        self.stdin_path = '/dev/null'
+        self.stdout_path = '/dev/null'
+        self.stderr_path = '/dev/null'
+        self.pidfile_timeout = 5
+
+    def run(self):
+        process_jobs(self.cups_connection, self.cpp)
+
+
 #True if printer name matches *any* of the regular expressions in regexps
 def match_re(prn, regexps, empty=False):
     if len(regexps):
@@ -487,20 +502,21 @@ def main():
             prepath = '/usr/lib/pymodules/python%s.%s' % sys.version_info[0:2]
             sys.path.insert(0, prepath)
 
-            import daemon
-            import daemon.pidfile
+            from daemon import runner
         except ImportError:
             print 'daemon module required for -d'
             print '\tyum install python-daemon, or apt-get install python-daemon, or pip install cloudprint[daemon]'
             sys.exit(1)
 
-        pidfile = daemon.pidfile.TimeoutPIDLockFile(
-            path=os.path.abspath(args.pidfile),
-            timeout=5,
+        # XXX printers is the google list
+        app = App(
+            cups_connection=cups_connection,
+            cpp=cpp,
+            pidfile_path=os.path.abspath(args.pidfile)
         )
-        with daemon.DaemonContext(pidfile=pidfile):
-            process_jobs(cups_connection, cpp)
-
+        sys.argv = [sys.argv[0], 'start']
+        daemon_runner = runner.DaemonRunner(app)
+        daemon_runner.do_action()
     else:
         process_jobs(cups_connection, cpp)
 
