From: David Steele <dsteele@gmail.com>
Date: Tue, 19 Nov 2013 21:31:07 -0500
Subject: Remove alternate username/pw auth file format

... in preference for a sasl file with optional username/pw.
---
 README.rst               |  2 --
 cloudprint/cloudprint.py | 14 +++-----------
 2 files changed, 3 insertions(+), 13 deletions(-)

diff --git a/README.rst b/README.rst
index 4fd567b..9c8cf2f 100644
--- a/README.rst
+++ b/README.rst
@@ -16,8 +16,6 @@ Usage
   -l              : logout of the current google account
   -p pid_file     : path to write the pid to (default cloudprint.pid)
   -a account_file : path to google account ident data (optional)
-                    account_file format:  <Google username>
-                                          <Google password>
   -c              : establish and store login credentials, then exit
   -f              : 'fast poll', if notifications aren't working
   -i regexp       : include files matching regexp
diff --git a/cloudprint/cloudprint.py b/cloudprint/cloudprint.py
index 0163837..d4bf067 100755
--- a/cloudprint/cloudprint.py
+++ b/cloudprint/cloudprint.py
@@ -402,8 +402,6 @@ def usage():
     print '-l\t\t: logout of the google account'
     print '-p pid_file\t: path to write the pid to (default cloudprint.pid)'
     print '-a account_file\t: path to google account ident data (default ~/.cloudprintauth)'
-    print '\t\t account_file format:\t <Google username>'
-    print '\t\t\t\t\t <Google password>'
     print '-c\t\t: establish and store login credentials, then exit'
     print '-f\t\t: use fast poll if notifications are not working'
     print '-i regexp\t: include local printers matching regexp'
@@ -477,15 +475,9 @@ def main():
         LOGGER.info('logged out')
         return
 
-    # Check if authentification is needed
+    # Check if password authentification is needed
     if not cpp.get_saved_auth():
-        if authfile and os.path.exists(authfile):
-            account_file = open(authfile)
-            cpp.username = account_file.next().rstrip()
-            cpp.password = account_file.next().rstrip()
-            account_file.close()
-
-        else:
+        if authfile is None  or not os.path.exists(authfile):
           cpp.username = raw_input('Google username: ')
           cpp.password = getpass.getpass()
 
@@ -523,7 +515,7 @@ def main():
             print 'daemon module required for -d'
             print '\tyum install python-daemon, or apt-get install python-daemon, or pip install python-daemon'
             sys.exit(1)
-        
+
         app = App(cups_connection=cups_connection,
                   cpp=cpp, printers=printers,
                   pidfile_path=os.path.abspath(pidfile))
